{"version":3,"sources":["atoms/list.js","atoms/metric.js","atoms/picture.js","atoms/line.js","molecules/traits.js","atoms/title.js","atoms/character.js","templates/main.js","App.js","index.js"],"names":["Ul","styled","ul","Wrapper","div","List","title","array","map","el","index","key","Dark","span","Metric","age","proffession","education","city","className","Image","img","Picture","imageUrl","src","alt","LineContainer","range","value","color","undefined","val","Name","p","Kid","kidsArr","Line","name","divided","Traits","traits","Title","surname","Chips","Character","character","HeighRow","ColBorder","Article","MainTemplate","persons","style","backgroundColor","process","traitColor","story","goals","needs","helpfull","threads","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33d58c04.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\nlist-style-type: disc;\r\nline-height: 1.5;\r\nmargin-left: 2rem;\r\npadding: 1rem;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 1rem;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nconst List = ({title, array}) => (\r\n    <Wrapper>\r\n        <h2>{title}</h2>\r\n        <Ul>\r\n            {\r\n            array.map((el, index) => {\r\n                return (index === 0 ? <li key={index}><strong>{el}</strong></li> :\r\n                <li key={index}>{el}</li>\r\n                )\r\n            })\r\n            }\r\n        </Ul>\r\n    </Wrapper>   \r\n)\r\n\r\nexport default List;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dark = styled.span`\r\ncolor: #343a40;\r\nfont-weight: bold;\r\ntext-transform: uppercase;\r\n`;\r\n\r\n\r\nconst Metric = ({age, proffession, education, city}) => {\r\n    return (\r\n    <div className=\"p-4\">\r\n        <p><Dark>Wiek:</Dark> {age}</p>\r\n        <p><Dark>Wykształcenie:</Dark> {education}</p>\r\n        <p><Dark>Zawód:</Dark> {proffession}</p>\r\n        <p><Dark>Miejsce zamieszkania:</Dark> {city}</p>\r\n    </div>  \r\n    ) \r\n}\r\n\r\nexport default Metric;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Image = styled.img`\r\nwidth: 100%;\r\nmin-width: 100%;\r\nheight: auto;\r\n`;\r\n\r\n\r\nconst Picture = ({imageUrl}) => {\r\n    return (\r\n    <Image src={imageUrl} alt=\"persona\" />   \r\n)\r\n    }\r\n\r\nexport default Picture;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LineContainer = styled.div`\r\n    width: 100%;\r\n    height: 10px;\r\n    position: relative;\r\n    background-color: #aaa;\r\n    border-radius: 0px 5px 5px 0px;\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: ${({range, value}) => range && value ? `${(value/range)*100}%` : '50%'};\r\n        height: 10px;\r\n        background-color: ${({color})=> color ? color : \"navy\"};\r\n        border-radius: 0px 5px 5px 0px;\r\n    }\r\n    ${({val})=> val !== undefined ? `\r\n    &:after {\r\n        content: \"lat\";\r\n        position: absolute;\r\n        top: 12px;\r\n        right: 10px;\r\n    }\r\n    ` : null}\r\n`;\r\n\r\nconst Name = styled.p`\r\n    margin-bottom: .5rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Kid = styled.div`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: black;\r\n    top: 0;\r\n    left: ${({val})=> val !== undefined ? `${(val + 1)*10}%` : \"10%\" };\r\n    &:before {\r\n        content: ${({val})=> val !== undefined ? `\"${val+1}\"` : \"\"};\r\n        position: relative;\r\n        display: inline-block;\r\n        font-size: 1.2rem;\r\n        top:12px;\r\n        color: black;\r\n    }\r\n    &:last-child {\r\n        &:after {\r\n            content: 'lat';\r\n            position: relative;\r\n            display: inline-block;\r\n            font-size: 1.2rem;\r\n            top: -6px;\r\n            right: -35px;\r\n\r\n        }\r\n    }\r\n`;\r\nconst kidsArr = [0,1,2,3,4,5,6,7,8]\r\n\r\nconst Line = ({name, range, value, divided, color}) => {\r\n    if (divided){\r\n        return (\r\n                <>\r\n                    <Name>{name}</Name>\r\n                    <LineContainer range={range} value={value} color={color}>\r\n                        {kidsArr.map((el, index) => (<Kid key={index} val={el} />))}\r\n                    </LineContainer>\r\n                </>\r\n        )\r\n    }\r\n    return (\r\n    <>\r\n        <Name>{name}</Name>\r\n        <LineContainer range={range} value={value} color={color}></LineContainer> \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Line;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Line from '../atoms/line';\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 0 2rem; \r\n    line-height: 1.8rem;\r\n`;\r\n\r\n\r\nconst Traits = ({traits, color}) => {\r\n    return (\r\n    <Wrapper>\r\n        {traits.map((el, index) => (\r\n            <Line color={color} key={index} name={el.name} range={el.range} value={el.value} divided={el.divided || false}/>\r\n        ))}\r\n    </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Traits;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = ({name, surname}) => {\r\n    return (\r\n    <h1 className=\"pl-4 display-2 text-white\">{name} {surname}</h1>    \r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Chips = styled.span`\r\nbackground-color: #343a40;\r\nfont-weight: bold;\r\ncolor: white;\r\npadding: 2px 10px;\r\nborder-radius: 15px;\r\ndisplay: inline-block;\r\nmargin: 5px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\nline-height: 1.5;\r\npadding: 1rem;\r\n`;\r\nconst Character = ({character}) => {\r\n    return (\r\n    <Wrapper>\r\n        {character.map((el, index) => (<Chips key={index}>{el}</Chips>) )}\r\n    </Wrapper>  \r\n    ) \r\n}\r\n\r\nexport default Character;","import React from 'react';\r\nimport List from '../atoms/list';\r\nimport Metric from '../atoms/metric';\r\nimport Picture from '../atoms/picture';\r\nimport Traits from '../molecules/traits';\r\nimport Title from '../atoms/title';\r\nimport Character from '../atoms/character';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\nmax-width: 1200px;\r\nmargin: 0 auto;\r\nborder: solid ${({color})=>color ? color : \"#343a40\"} 2px;\r\nheight: 1587px;\r\noverflow: hidden;\r\n`;\r\n\r\nconst HeighRow = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-content: flex-start;\r\n    height: 100%;\r\n    min-height: calc(100vh - 77px);\r\n    margin: 0;\r\n    & > div {\r\n        height: 25%;\r\n    }\r\n`;\r\nconst ColBorder = styled.div`\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n    min-width: 0;\r\n    max-width: 100%;\r\n    margin: 0;\r\n    border-left: solid ${({color})=>color ? color : \"#343a40\"} 2px;\r\n`;\r\n\r\nconst Article = styled.div`\r\n    width: 90%;\r\n    margin: 10px auto;\r\n    font-size: 1.6rem;\r\n`;\r\nconst MainTemplate = ({persons}) => {\r\n    return (<>\r\n            {persons.map((el, index) => {\r\n            return (\r\n                <Wrapper key={index} color={el.color}>\r\n                    <div className=\"mb-4\">\r\n                        <div className=\"row\" style={{backgroundColor: `${el.color}`}}>\r\n                            <div className=\"col-12\">\r\n                                <Title name={el.name} surname={el.surname} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 pr-0\">\r\n                                <Metric age={el.age} proffession={el.proffession} education={el.education} city={el.city} />\r\n                                <Picture imageUrl={process.env.PUBLIC_URL+`/img/${el.img}`} />\r\n                                <Character character={el.character} />\r\n                                <Traits traits={el.traits} color={el.traitColor}/>\r\n                                <h2 className=\"display-4 ml-4 pl-1 my-4\">Bio</h2>\r\n                                <Article>{el.story}</Article>\r\n                            </div>\r\n                            <ColBorder color={el.color}>\r\n                                <HeighRow>\r\n                                    <div className=\"col-12 text-dark\">\r\n                                        <List title=\"Cele\" array={el.goals} />\r\n                                    </div>\r\n                                    <div className=\"col-12 text-white\" style={{backgroundColor: `${el.color}`}}>\r\n                                        <List title=\"Potrzeby\" array={el.needs} />\r\n                                    </div>\r\n                                    <div className=\"col-12 text-dark\">\r\n                                        <List title=\"Pomocne\" array={el.helpfull} />\r\n                                    </div>\r\n                                    <div className=\"col-12 text-white\" style={{backgroundColor: `${el.color}`}}>\r\n                                        <List title=\"Obawy\" array={el.threads} />\r\n                                    </div>\r\n                                </HeighRow>\r\n                            </ColBorder>\r\n                        </div>\r\n                    </div>\r\n                </Wrapper>\r\n                        )\r\n                    })\r\n                }\r\n             </>\r\n        );\r\n      \r\n    }\r\n\r\nexport default MainTemplate;","import React from 'react';\r\nimport Main from './templates/main';\r\nimport persons from './data/personsData.json';\r\n\r\nfunction App() {\r\n  return (\r\n      <Main persons={persons} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./reset.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}